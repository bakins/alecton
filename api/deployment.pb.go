// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deployment.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Code int32

const (
	// Status_UNKNOWN indicates that a release is in an uncertain state.
	Code_UNKNOWN Code = 0
	// Status_DEPLOYED indicates that the release has been pushed to Kubernetes.
	Code_DEPLOYED Code = 1
	// Status_DELETED indicates that a release has been deleted from Kubermetes.
	Code_DELETED Code = 2
	// Status_SUPERSEDED indicates that this release object is outdated and a newer one exists.
	Code_SUPERSEDED Code = 3
	// Status_FAILED indicates that the release was not successfully deployed.
	Code_FAILED Code = 4
	// Status_DELETING indicates that a delete operation is underway.
	Code_DELETING Code = 5
	// Status_PENDING_INSTALL indicates that an install operation is underway.
	Code_PENDING_INSTALL Code = 6
	// Status_PENDING_UPGRADE indicates that an upgrade operation is underway.
	Code_PENDING_UPGRADE Code = 7
	// Status_PENDING_ROLLBACK indicates that an rollback operation is underway.
	Code_PENDING_ROLLBACK Code = 8
)

var Code_name = map[int32]string{
	0: "UNKNOWN",
	1: "DEPLOYED",
	2: "DELETED",
	3: "SUPERSEDED",
	4: "FAILED",
	5: "DELETING",
	6: "PENDING_INSTALL",
	7: "PENDING_UPGRADE",
	8: "PENDING_ROLLBACK",
}
var Code_value = map[string]int32{
	"UNKNOWN":          0,
	"DEPLOYED":         1,
	"DELETED":          2,
	"SUPERSEDED":       3,
	"FAILED":           4,
	"DELETING":         5,
	"PENDING_INSTALL":  6,
	"PENDING_UPGRADE":  7,
	"PENDING_ROLLBACK": 8,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}
func (Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type Deployment struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Application string `protobuf:"bytes,2,opt,name=application" json:"application,omitempty"`
	Target      string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	Artifact    string `protobuf:"bytes,4,opt,name=artifact" json:"artifact,omitempty"`
	Version     string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	// status
	Code Code `protobuf:"varint,6,opt,name=code,enum=alecton.api.Code" json:"code,omitempty"`
	// rendered templates
	Resources []*Resource `protobuf:"bytes,7,rep,name=resources" json:"resources,omitempty"`
}

func (m *Deployment) Reset()                    { *m = Deployment{} }
func (m *Deployment) String() string            { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()               {}
func (*Deployment) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Deployment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Deployment) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *Deployment) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Deployment) GetArtifact() string {
	if m != nil {
		return m.Artifact
	}
	return ""
}

func (m *Deployment) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Deployment) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_UNKNOWN
}

func (m *Deployment) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

// Resource is a fully rendered Kubernetes manifest.
type Resource struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Kind      string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Data      string `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resource) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Resource) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Resource) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type DeploymentList struct {
	Items []*Deployment `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *DeploymentList) Reset()                    { *m = DeploymentList{} }
func (m *DeploymentList) String() string            { return proto.CompactTextString(m) }
func (*DeploymentList) ProtoMessage()               {}
func (*DeploymentList) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *DeploymentList) GetItems() []*Deployment {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetDeploymentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDeploymentRequest) Reset()                    { *m = GetDeploymentRequest{} }
func (m *GetDeploymentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeploymentRequest) ProtoMessage()               {}
func (*GetDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *GetDeploymentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListDeploymentsRequest struct {
	// If set, only return deployments for this application
	Application string `protobuf:"bytes,1,opt,name=application" json:"application,omitempty"`
}

func (m *ListDeploymentsRequest) Reset()                    { *m = ListDeploymentsRequest{} }
func (m *ListDeploymentsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDeploymentsRequest) ProtoMessage()               {}
func (*ListDeploymentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *ListDeploymentsRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

type CreateDeploymentRequest struct {
	Application string `protobuf:"bytes,2,opt,name=application" json:"application,omitempty"`
	Target      string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	Artifact    string `protobuf:"bytes,4,opt,name=artifact" json:"artifact,omitempty"`
	Version     string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	// actually attempt to deploy the deployment
	Activate bool `protobuf:"varint,6,opt,name=activate" json:"activate,omitempty"`
}

func (m *CreateDeploymentRequest) Reset()                    { *m = CreateDeploymentRequest{} }
func (m *CreateDeploymentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeploymentRequest) ProtoMessage()               {}
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *CreateDeploymentRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *CreateDeploymentRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *CreateDeploymentRequest) GetArtifact() string {
	if m != nil {
		return m.Artifact
	}
	return ""
}

func (m *CreateDeploymentRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CreateDeploymentRequest) GetActivate() bool {
	if m != nil {
		return m.Activate
	}
	return false
}

func init() {
	proto.RegisterType((*Deployment)(nil), "alecton.api.Deployment")
	proto.RegisterType((*Resource)(nil), "alecton.api.Resource")
	proto.RegisterType((*DeploymentList)(nil), "alecton.api.DeploymentList")
	proto.RegisterType((*GetDeploymentRequest)(nil), "alecton.api.GetDeploymentRequest")
	proto.RegisterType((*ListDeploymentsRequest)(nil), "alecton.api.ListDeploymentsRequest")
	proto.RegisterType((*CreateDeploymentRequest)(nil), "alecton.api.CreateDeploymentRequest")
	proto.RegisterEnum("alecton.api.Code", Code_name, Code_value)
}

func init() { proto.RegisterFile("deployment.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x5d, 0x8f, 0xd2, 0x40,
	0x14, 0xb5, 0x7c, 0x14, 0xb8, 0x18, 0x1c, 0xc7, 0x75, 0xb7, 0xd9, 0x18, 0x6d, 0x9a, 0x68, 0x88,
	0x09, 0x90, 0xec, 0x26, 0x3e, 0xf8, 0x62, 0x80, 0x8e, 0x84, 0x6c, 0x53, 0x48, 0x81, 0x18, 0x7d,
	0x31, 0xb3, 0xed, 0x88, 0x93, 0x05, 0xa6, 0xb6, 0x03, 0x1b, 0xff, 0x89, 0x7f, 0xc8, 0xdf, 0x61,
	0xe2, 0x93, 0x3f, 0xc3, 0x74, 0x28, 0x2d, 0x1f, 0xfb, 0x76, 0xef, 0x39, 0x67, 0x6e, 0xe7, 0xf6,
	0x9c, 0x01, 0x14, 0xb0, 0x70, 0x21, 0x7e, 0x2e, 0xd9, 0x4a, 0xb6, 0xc3, 0x48, 0x48, 0x81, 0xeb,
	0x01, 0x8d, 0x22, 0xb6, 0x58, 0xb4, 0x69, 0xc8, 0x2f, 0xdf, 0xcd, 0xb9, 0xfc, 0xbe, 0xbe, 0x6d,
	0xfb, 0x62, 0xd9, 0x59, 0xde, 0x73, 0x79, 0x27, 0xee, 0x3b, 0x73, 0xd1, 0x52, 0xca, 0xd6, 0x86,
	0x2e, 0x78, 0x40, 0xa5, 0x88, 0xe2, 0x4e, 0x56, 0x6e, 0x87, 0x58, 0xff, 0x34, 0x00, 0x3b, 0x9b,
	0x8c, 0x1b, 0x50, 0xe0, 0x81, 0xa1, 0x99, 0x5a, 0xb3, 0xe6, 0x15, 0x78, 0x80, 0x4d, 0xa8, 0xd3,
	0x30, 0x5c, 0x70, 0x9f, 0x4a, 0x2e, 0x56, 0x46, 0x41, 0x11, 0xfb, 0x10, 0x3e, 0x07, 0x5d, 0xd2,
	0x68, 0xce, 0xa4, 0x51, 0x54, 0x64, 0xda, 0xe1, 0x4b, 0xa8, 0xd2, 0x48, 0xf2, 0x6f, 0xd4, 0x97,
	0x46, 0x49, 0x31, 0x59, 0x8f, 0x0d, 0xa8, 0x6c, 0x58, 0x14, 0x27, 0x13, 0xcb, 0x8a, 0xda, 0xb5,
	0xf8, 0x35, 0x94, 0x7c, 0x11, 0x30, 0x43, 0x37, 0xb5, 0x66, 0xe3, 0xea, 0x69, 0x7b, 0x6f, 0xc5,
	0x76, 0x5f, 0x04, 0xcc, 0x53, 0x34, 0xbe, 0x86, 0x5a, 0xc4, 0x62, 0xb1, 0x8e, 0x7c, 0x16, 0x1b,
	0x15, 0xb3, 0xd8, 0xac, 0x5f, 0x3d, 0x3f, 0xd0, 0x7a, 0x29, 0xeb, 0xe5, 0x3a, 0x2b, 0x80, 0xea,
	0x0e, 0xc6, 0x18, 0x4a, 0x2b, 0xba, 0x64, 0xe9, 0xa6, 0xaa, 0x4e, 0xb0, 0x3b, 0xbe, 0x0a, 0xd2,
	0x25, 0x55, 0x8d, 0x5f, 0x40, 0x2d, 0xe1, 0xe2, 0x90, 0xfa, 0x2c, 0x5d, 0x30, 0x07, 0x92, 0x13,
	0x01, 0x95, 0x34, 0xdd, 0x4f, 0xd5, 0xd6, 0x07, 0x68, 0xe4, 0xff, 0xd3, 0xe1, 0xb1, 0xc4, 0x2d,
	0x28, 0x73, 0xc9, 0x96, 0xb1, 0xa1, 0xa9, 0x8b, 0x5e, 0x1c, 0x5c, 0x34, 0xd7, 0x7a, 0x5b, 0x95,
	0xf5, 0x06, 0xce, 0x06, 0x4c, 0xee, 0xe1, 0xec, 0xc7, 0x9a, 0xc5, 0x27, 0xd6, 0x58, 0xef, 0xe1,
	0x3c, 0x19, 0x9f, 0x0b, 0xe3, 0x9d, 0xf2, 0xc8, 0x34, 0xed, 0xc4, 0x34, 0xeb, 0xb7, 0x06, 0x17,
	0xfd, 0x88, 0x51, 0xc9, 0x4e, 0xbf, 0xd3, 0x7c, 0xc0, 0xf2, 0x9e, 0xfe, 0xf7, 0xcf, 0xab, 0x82,
	0xa9, 0x1d, 0x5a, 0xff, 0xf2, 0xd0, 0xfa, 0x4c, 0xb4, 0x8b, 0x80, 0x75, 0x1c, 0x81, 0x4c, 0x91,
	0x47, 0xc1, 0x3c, 0x8a, 0x42, 0x26, 0xc9, 0x22, 0x91, 0x04, 0xc9, 0x97, 0x7c, 0x43, 0xe5, 0x36,
	0x16, 0x55, 0x2f, 0xeb, 0xdf, 0xfe, 0xd2, 0xa0, 0x94, 0xc4, 0x02, 0xd7, 0xa1, 0x32, 0x73, 0x6f,
	0xdc, 0xd1, 0x27, 0x17, 0x3d, 0xc2, 0x8f, 0xa1, 0x6a, 0x93, 0xb1, 0x33, 0xfa, 0x4c, 0x6c, 0xa4,
	0x25, 0x94, 0x4d, 0x1c, 0x32, 0x25, 0x36, 0x2a, 0xe0, 0x06, 0xc0, 0x64, 0x36, 0x26, 0xde, 0x84,
	0xd8, 0xc4, 0x46, 0x45, 0x0c, 0xa0, 0x7f, 0xec, 0x0e, 0x1d, 0x62, 0xa3, 0xd2, 0xf6, 0x98, 0x43,
	0xa6, 0x43, 0x77, 0x80, 0xca, 0xf8, 0x19, 0x3c, 0x19, 0x13, 0xd7, 0x1e, 0xba, 0x83, 0xaf, 0x43,
	0x77, 0x32, 0xed, 0x3a, 0x0e, 0xd2, 0xf7, 0xc1, 0xd9, 0x78, 0xe0, 0x75, 0x6d, 0x82, 0x2a, 0xf8,
	0x0c, 0xd0, 0x0e, 0xf4, 0x46, 0x8e, 0xd3, 0xeb, 0xf6, 0x6f, 0x50, 0xb5, 0x57, 0xfe, 0x52, 0xa4,
	0x21, 0xbf, 0xd5, 0xd5, 0x33, 0xbb, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x82, 0x33, 0xc0,
	0xbf, 0x03, 0x00, 0x00,
}
